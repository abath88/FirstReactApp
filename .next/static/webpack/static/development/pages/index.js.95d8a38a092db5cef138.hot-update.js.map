{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.95d8a38a092db5cef138.hot-update.js","sources":["webpack:///./Components/Container.js"],"sourcesContent":["import { Component } from 'react'\r\nimport Section from \"./Section\"\r\nimport Color from \"./Color\"\r\nimport Headers from \"./Headers\"\r\nimport Paragraph from \"./Paragraph\"\r\n\r\nimport Menu from \"./Menu\"\r\n\r\nclass Container extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            font: 'sans-serif',\r\n            color: [\r\n                'rgba(255,0,0,.3',\r\n                'rgba(255,0,0,.8)',\r\n                'red'  \r\n            ]\r\n        }\r\n\r\n        this.changeColor = this.changeColor.bind(this)\r\n    }\r\n\r\n    changeFont = (event) => {    \r\n        this.setState({\r\n            font: event.target[event.target.selectedIndex].value\r\n        })\r\n    }\r\n\r\n    changeColor(e) {\r\n        console.log(e.target.value)\r\n        let col = []\r\n        for(let i=1; i < e.target.value.length; i+=2 ) {\r\n            let val1 = parseInt(e.target.value[i])\r\n            let val2 = parseInt(e.target.value[i+1])\r\n            if(isNaN(val1)){\r\n                switch(e.target.value[i]) {\r\n                    case \"a\": val1 = 10;\r\n                    break;\r\n                    case \"b\": val1 = 11;\r\n                    break;\r\n                    case \"c\": val1 = 12;\r\n                    break;\r\n                    case \"d\": val1 = 13;\r\n                    break;\r\n                    case \"e\": val1 = 14;\r\n                    break;\r\n                    case \"f\": val1 = 15;\r\n                    break;\r\n                }\r\n\r\n                \r\n            }\r\n\r\n            val1 = val1 * 16\r\n            if(isNaN(val2)){\r\n                switch(e.target.value[i+1]) {\r\n                    case \"a\": val2 = 10;\r\n                    break;\r\n                    case \"b\": val2 = 11;\r\n                    break;\r\n                    case \"c\": val2 = 12;\r\n                    break;\r\n                    case \"d\": val2 = 13;\r\n                    break;\r\n                    case \"e\": val2 = 14;\r\n                    break;\r\n                    case \"f\": val2 = 15;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            col.push(val1 + val2)\r\n        }\r\n\r\n        console.log(col)\r\n\r\n        this.setState({\r\n            color: [\r\n                `rgba(${col[0]}, ${col[1]}, ${col[2]},.3`,\r\n                `rgba(${col[0]}, ${col[1]}, ${col[2]},.8)`,\r\n                e.target.value \r\n            ]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Menu changeFont={this.changeFont} changeColor={this.changeColor}/>\r\n                <Section title=\"01. Typography\">\r\n                    <Headers font={this.state.font}/>\r\n                    <Paragraph font={this.state.font}/>\r\n                </Section>\r\n                <Section title=\"02. Color\">\r\n                    <Color colors={[\"white\", \"rgba(0,0,0, .19)\", \"rgba(0,0,0, .39)\", \"rgba(0,0,0, .59)\", \"rgba(0,0,0, .79)\", \"rgb(0,0,0)\"]} />\r\n                    <Color colors={this.state.color} />\r\n                </Section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgBA;AACA;AADA;AAGA;AACA;AAjBA;AACA;AACA;AAFA;AASA;AAZA;AAaA;AACA;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAZA;AAgBA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAOA;;;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA7FA;AACA;AA+FA;;;;A","sourceRoot":""}