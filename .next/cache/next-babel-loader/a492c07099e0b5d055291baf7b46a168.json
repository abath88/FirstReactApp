{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\FirstReactApp\\\\Components\\\\Container.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport Section from \"./Section\";\nimport Color from \"./Color\";\nimport Headers from \"./Headers\";\nimport Paragraph from \"./Paragraph\";\nimport Menu from \"./Menu\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n    _this.state = {\n      font: 'sans-serif',\n      color: ['red', 'redlight', 'reddark']\n    };\n    _this.changeFont = _this.changeFont.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"changeFont\",\n    value: function changeFont() {\n      this.setState({\n        font: this.state.font == 'serif' ? 'sans-serif' : 'serif'\n      });\n    }\n  }, {\n    key: \"changeColor\",\n    value: function changeColor(e) {\n      switch (e.target.value) {\n        case 'red':\n          this.setState({\n            color: ['red', 'redlight', 'reddark']\n          });\n          break;\n\n        default:\n          this.setState({\n            color: ['red', 'redlight', 'reddark']\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Menu, {\n        changeFont: this.changeFont,\n        changeColor: this.changeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), __jsx(Section, {\n        title: \"01. Typography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(Headers, {\n        font: this.state.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), __jsx(Paragraph, {\n        font: this.state.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), __jsx(Section, {\n        title: \"02. Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(Color, {\n        colors: [\"white\", \"rgba(0,0,0, .19)\", \"rgba(0,0,0, .39)\", \"rgba(0,0,0, .59)\", \"rgba(0,0,0, .79)\", \"rgb(0,0,0)\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), __jsx(Color, {\n        colors: [\"primary-light\", \"primary\", \"primary-dark\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default Container;","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/FirstReactApp/Components/Container.js"],"names":["Component","Section","Color","Headers","Paragraph","Menu","Container","props","state","font","color","changeFont","bind","setState","e","target","value","changeColor"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,YADG;AAETC,MAAAA,KAAK,EAAE,CACH,KADG,EAEH,UAFG,EAGH,SAHG;AAFE,KAAb;AASA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AAZe;AAalB;;;;iCAEY;AACT,WAAKC,QAAL,CAAc;AACVJ,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,IAAmB,OAAnB,GACF,YADE,GAEF;AAHM,OAAd;AAKH;;;gCAEWK,C,EAAG;AACX,cAAOA,CAAC,CAACC,MAAF,CAASC,KAAhB;AACI,aAAK,KAAL;AACI,eAAKH,QAAL,CAAc;AACVH,YAAAA,KAAK,EAAE,CACH,KADG,EAEH,UAFG,EAGH,SAHG;AADG,WAAd;AAOJ;;AACA;AACI,eAAKG,QAAL,CAAc;AACVH,YAAAA,KAAK,EAAE,CACH,KADG,EAEH,UAFG,EAGH,SAHG;AADG,WAAd;AAXR;AAmBH;;;6BAEQ;AACL,aACI,4BACI,MAAC,IAAD;AAAM,QAAA,UAAU,EAAE,KAAKC,UAAvB;AAAmC,QAAA,WAAW,EAAE,KAAKM,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,EAMI,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,MAAM,EAAE,CAAC,OAAD,EAAU,kBAAV,EAA8B,kBAA9B,EAAkD,kBAAlD,EAAsE,kBAAtE,EAA0F,YAA1F,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,KAAD;AAAO,QAAA,MAAM,EAAE,CAAC,eAAD,EAAkB,SAAlB,EAA6B,cAA7B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,CADJ;AAaH;;;;EA5DmBT,S;;AA+DxB,eAAeM,SAAf","sourcesContent":["import { Component } from 'react'\r\nimport Section from \"./Section\"\r\nimport Color from \"./Color\"\r\nimport Headers from \"./Headers\"\r\nimport Paragraph from \"./Paragraph\"\r\n\r\nimport Menu from \"./Menu\"\r\n\r\nclass Container extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            font: 'sans-serif',\r\n            color: [\r\n                'red', \r\n                'redlight', \r\n                'reddark'\r\n            ]\r\n        }\r\n\r\n        this.changeFont = this.changeFont.bind(this)\r\n    }\r\n\r\n    changeFont() {\r\n        this.setState({\r\n            font: this.state.font == 'serif' ? \r\n                'sans-serif' : \r\n                'serif'\r\n        })\r\n    }\r\n\r\n    changeColor(e) {\r\n        switch(e.target.value) {\r\n            case 'red':\r\n                this.setState({\r\n                    color: [\r\n                        'red', \r\n                        'redlight', \r\n                        'reddark'\r\n                    ]\r\n                })\r\n            break;\r\n            default: \r\n                this.setState({\r\n                    color: [\r\n                        'red', \r\n                        'redlight', \r\n                        'reddark'\r\n                    ]\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Menu changeFont={this.changeFont} changeColor={this.changeColor}/>\r\n                <Section title=\"01. Typography\">\r\n                    <Headers font={this.state.font}/>\r\n                    <Paragraph font={this.state.font}/>\r\n                </Section>\r\n                <Section title=\"02. Color\">\r\n                    <Color colors={[\"white\", \"rgba(0,0,0, .19)\", \"rgba(0,0,0, .39)\", \"rgba(0,0,0, .59)\", \"rgba(0,0,0, .79)\", \"rgb(0,0,0)\"]} />\r\n                    <Color colors={[\"primary-light\", \"primary\", \"primary-dark\"]} />\r\n                </Section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container"]},"metadata":{},"sourceType":"module"}